import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.sql.DataSource;


public abstract  class UserDao {
	private DataSource dataSource;
	
	public void setDataSource(DataSource dataSource) {
		this.dataSource = dataSource;
	}

	public void add(final User user) throws ClassNotFoundException, SQLException {
		
		StatementStrategy st = new StatementStrategy(){
			
			public PreparedStatement makeStatement(Connection c) throws SQLException {
				PreparedStatement ps = c.prepareStatement("insert into users(id,name)values(?,?)");
				
				ps.setString(1, user.getId());
				ps.setString(2, user.getName());
				ps.executeUpdate();
				
				ps.close();
				c.close();
				return ps;
			}

		};
		
		jdbcContextWithStatementStrategy(st);
	}
	
	public User get(String id) throws SQLException, ClassNotFoundException{
		
		Connection c =dataSource.getConnection();
		
		PreparedStatement ps = c.prepareStatement("select * from users where id = ?");
		ps.setString(1, id);
		
		ResultSet rs = ps.executeQuery();
		User user = new User();
		while(rs.next()){
			user.setId(rs.getString("id"));
			user.setName(rs.getNString("name"));
		}
		rs.close();
		c.close();
		
		return user;
	}
	
	
	public void deleteAll() throws SQLException {
		
		StatementStrategy st = new DeleteAllStatement();
		jdbcContextWithStatementStrategy(st);
		
	}
	
	public void jdbcContextWithStatementStrategy(StatementStrategy stmt) throws SQLException {
		Connection c = null;
		PreparedStatement ps = null;

		try{
			c =dataSource.getConnection();
			ps = stmt.makeStatement(c);
			ps.executeUpdate();
		}catch(SQLException e){
			throw e;
		}finally{
		ps.close();
		c.close();
		}
	}

	abstract protected PreparedStatement makeStatement(Connection c) throws SQLException ;
	
	
	public int getCount() throws SQLException {
		Connection c = dataSource.getConnection();
		
		PreparedStatement ps = c.prepareStatement("select count(*) from users" );
		
		ResultSet rs = ps.executeQuery();
		rs.next();
		int count = rs.getInt(1);
		
		rs.close();
		ps.close();
		c.close();
		
		return count;
	}
}
